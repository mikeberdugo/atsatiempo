# Generated by Django 5.0.6 on 2024-09-25 14:59

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('candidato', '0001_initial'),
        ('cliente', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('activate', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'GRUPO',
                'verbose_name_plural': 'GRUPOS',
                'db_table': 'grupo',
            },
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'PERMISO',
                'verbose_name_plural': 'PERMISOS',
                'db_table': 'permiso',
            },
        ),
        migrations.CreateModel(
            name='UsuarioBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('primer_nombre', models.CharField(blank=True, max_length=15)),
                ('segundo_nombre', models.CharField(blank=True, max_length=15)),
                ('primer_apellido', models.CharField(blank=True, max_length=15)),
                ('segundo_apellido', models.CharField(blank=True, max_length=15)),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('is_verificado', models.BooleanField(default=False)),
                ('candidato_id_101', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuario', to='candidato.can101candidato')),
                ('cliente_id_051', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cliente.cli051cliente')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.grupo')),
            ],
            options={
                'verbose_name': 'USUARIO',
                'verbose_name_plural': 'USUARIOS',
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TokenAutorizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('fecha_expiracion', models.DateTimeField(default=datetime.datetime(2024, 9, 26, 14, 59, 58, 789076, tzinfo=datetime.timezone.utc))),
                ('fecha_validacion', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.usuariobase')),
            ],
            options={
                'verbose_name': 'TOKEN AUTORIZACION',
                'db_table': 'token_autorizacion',
            },
        ),
        migrations.CreateModel(
            name='GrupoPermiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupo_permisos', to='usuarios.grupo')),
                ('permiso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupo_permisos', to='usuarios.permiso')),
            ],
            options={
                'verbose_name': 'ASIGNACIÃ“N DE PERMISO A GRUPO',
                'verbose_name_plural': 'ASIGNACIONES DE PERMISOS A GRUPOS',
                'db_table': 'grupo_permiso',
                'unique_together': {('grupo', 'permiso')},
            },
        ),
    ]
